/* eslint-disable */

// @ts-nocheck

// This file is auto-generated by TanStack Router

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as WorkbenchRouteImport } from "./routes/workbench"
import { Route as AnalysisRouteImport } from "./routes/analysis"
import { Route as R500RouteImport } from "./routes/500"
import { Route as R404RouteImport } from "./routes/404"
import { Route as R403RouteImport } from "./routes/403"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as AuthLoginRouteImport } from "./routes/auth.login"

const WorkbenchRoute = WorkbenchRouteImport.update({
  id: "/workbench",
  path: "/workbench",
  getParentRoute: () => rootRouteImport,
} as any)
const AnalysisRoute = AnalysisRouteImport.update({
  id: "/analysis",
  path: "/analysis",
  getParentRoute: () => rootRouteImport,
} as any)
const R500Route = R500RouteImport.update({
  id: "/500",
  path: "/500",
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: "/404",
  path: "/404",
  getParentRoute: () => rootRouteImport,
} as any)
const R403Route = R403RouteImport.update({
  id: "/403",
  path: "/403",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: "/auth/login",
  path: "/auth/login",
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/403": typeof R403Route
  "/404": typeof R404Route
  "/500": typeof R500Route
  "/analysis": typeof AnalysisRoute
  "/workbench": typeof WorkbenchRoute
  "/auth/login": typeof AuthLoginRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/403": typeof R403Route
  "/404": typeof R404Route
  "/500": typeof R500Route
  "/analysis": typeof AnalysisRoute
  "/workbench": typeof WorkbenchRoute
  "/auth/login": typeof AuthLoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/403": typeof R403Route
  "/404": typeof R404Route
  "/500": typeof R500Route
  "/analysis": typeof AnalysisRoute
  "/workbench": typeof WorkbenchRoute
  "/auth/login": typeof AuthLoginRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/403"
    | "/404"
    | "/500"
    | "/analysis"
    | "/workbench"
    | "/auth/login"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/403"
    | "/404"
    | "/500"
    | "/analysis"
    | "/workbench"
    | "/auth/login"
  id:
    | "__root__"
    | "/"
    | "/403"
    | "/404"
    | "/500"
    | "/analysis"
    | "/workbench"
    | "/auth/login"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R403Route: typeof R403Route
  R404Route: typeof R404Route
  R500Route: typeof R500Route
  AnalysisRoute: typeof AnalysisRoute
  WorkbenchRoute: typeof WorkbenchRoute
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/workbench": {
      id: "/workbench"
      path: "/workbench"
      fullPath: "/workbench"
      preLoaderRoute: typeof WorkbenchRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/analysis": {
      id: "/analysis"
      path: "/analysis"
      fullPath: "/analysis"
      preLoaderRoute: typeof AnalysisRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/500": {
      id: "/500"
      path: "/500"
      fullPath: "/500"
      preLoaderRoute: typeof R500RouteImport
      parentRoute: typeof rootRouteImport
    }
    "/404": {
      id: "/404"
      path: "/404"
      fullPath: "/404"
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    "/403": {
      id: "/403"
      path: "/403"
      fullPath: "/403"
      preLoaderRoute: typeof R403RouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/auth/login": {
      id: "/auth/login"
      path: "/auth/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R403Route: R403Route,
  R404Route: R404Route,
  R500Route: R500Route,
  AnalysisRoute: AnalysisRoute,
  WorkbenchRoute: WorkbenchRoute,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
